{"ast":null,"code":"var _jsxFileName = \"/Users/bobbycrew/Documents/Uni/Second Year/Car-Auction-Site-Y2--main/Frontend/src/components/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const login = isAdmin => {\n    setIsLoggedIn(true);\n    setIsAdmin(isAdmin);\n  };\n  const logout = () => {\n    setIsLoggedIn(false);\n    setIsAdmin(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      isAdmin,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5dptcB5rpn7CakzOsZJrHSfuts8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/bobbycrew/Documents/Uni/Second Year/Car-Auction-Site-Y2--main/Frontend/src/components/AuthContext.tsx"],"sourcesContent":["import { createContext, useState, useContext, ReactNode } from \"react\";\n\ninterface AuthContextType {\n  isLoggedIn: boolean;\n  isAdmin: boolean;\n  login: (isAdmin: boolean) => void;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const login = (isAdmin: boolean) => {\n    setIsLoggedIn(true);\n    setIsAdmin(isAdmin);\n  };\n\n  const logout = () => {\n    setIsLoggedIn(false);\n    setIsAdmin(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, isAdmin, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASvE,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,KAAK,GAAIF,OAAgB,IAAK;IAClCD,aAAa,CAAC,IAAI,CAAC;IACnBE,UAAU,CAACD,OAAO,CAAC;EACrB,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBJ,aAAa,CAAC,KAAK,CAAC;IACpBE,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEP,UAAU;MAAEE,OAAO;MAAEE,KAAK;MAAEC;IAAO,CAAE;IAAAP,QAAA,EACjEA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACZ,EAAA,CAnBWF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAqBzB,OAAO,MAAMgB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGvB,UAAU,CAACG,WAAW,CAAC;EACvC,IAAI,CAACoB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}