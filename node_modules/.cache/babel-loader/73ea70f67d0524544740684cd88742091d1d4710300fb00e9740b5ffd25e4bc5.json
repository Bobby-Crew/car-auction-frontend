{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { useNumberFieldRootContext } from '../root/NumberFieldRootContext.js';\nimport { isWebKit } from '../../utils/detectBrowser.js';\nimport { useComponentRenderer } from '../../utils/useComponentRenderer.js';\nimport { useForkRef } from '../../utils/useForkRef.js';\nimport { ownerDocument } from '../../utils/owner.js';\n\n/**\n * A custom element to display instead of the native cursor while using the scrub area.\n * Renders a `<span>` element.\n *\n * This component uses the [Pointer Lock API](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API), which may prompt the browser to display a related notification. It is disabled\n * in Safari to avoid a layout shift that this notification causes there.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nconst NumberFieldScrubAreaCursor = /*#__PURE__*/React.forwardRef(function NumberFieldScrubAreaCursor(props, forwardedRef) {\n  const {\n    render,\n    className,\n    ...otherProps\n  } = props;\n  const {\n    isScrubbing,\n    scrubAreaCursorRef,\n    state,\n    getScrubAreaCursorProps\n  } = useNumberFieldRootContext();\n  const [element, setElement] = React.useState(null);\n  const mergedRef = useForkRef(forwardedRef, scrubAreaCursorRef, setElement);\n  const {\n    renderElement\n  } = useComponentRenderer({\n    propGetter: getScrubAreaCursorProps,\n    ref: mergedRef,\n    render: render ?? 'span',\n    state,\n    className,\n    extraProps: otherProps\n  });\n  if (!isScrubbing || isWebKit()) {\n    return null;\n  }\n  return /*#__PURE__*/ReactDOM.createPortal(renderElement(), ownerDocument(element).body);\n});\nprocess.env.NODE_ENV !== \"production\" ? NumberFieldScrubAreaCursor.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * CSS class applied to the element, or a function that\n   * returns a class based on the component’s state.\n   */\n  className: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  /**\n   * Allows you to replace the component’s HTML element\n   * with a different tag, or compose it with another component.\n   *\n   * Accepts a `ReactElement` or a function that returns the element to render.\n   */\n  render: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n} : void 0;\nexport { NumberFieldScrubAreaCursor };","map":{"version":3,"names":["React","ReactDOM","PropTypes","useNumberFieldRootContext","isWebKit","useComponentRenderer","useForkRef","ownerDocument","NumberFieldScrubAreaCursor","forwardRef","props","forwardedRef","render","className","otherProps","isScrubbing","scrubAreaCursorRef","state","getScrubAreaCursorProps","element","setElement","useState","mergedRef","renderElement","propGetter","ref","extraProps","createPortal","body","process","env","NODE_ENV","propTypes","children","node","oneOfType","func","string"],"sources":["/Users/bobbycrew/Documents/Uni/Second Year/Car-Auction-Site-Y2--main/Frontend/node_modules/@base-ui-components/react/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { useNumberFieldRootContext } from '../root/NumberFieldRootContext.js';\nimport { isWebKit } from '../../utils/detectBrowser.js';\nimport { useComponentRenderer } from '../../utils/useComponentRenderer.js';\nimport { useForkRef } from '../../utils/useForkRef.js';\nimport { ownerDocument } from '../../utils/owner.js';\n\n/**\n * A custom element to display instead of the native cursor while using the scrub area.\n * Renders a `<span>` element.\n *\n * This component uses the [Pointer Lock API](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API), which may prompt the browser to display a related notification. It is disabled\n * in Safari to avoid a layout shift that this notification causes there.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nconst NumberFieldScrubAreaCursor = /*#__PURE__*/React.forwardRef(function NumberFieldScrubAreaCursor(props, forwardedRef) {\n  const {\n    render,\n    className,\n    ...otherProps\n  } = props;\n  const {\n    isScrubbing,\n    scrubAreaCursorRef,\n    state,\n    getScrubAreaCursorProps\n  } = useNumberFieldRootContext();\n  const [element, setElement] = React.useState(null);\n  const mergedRef = useForkRef(forwardedRef, scrubAreaCursorRef, setElement);\n  const {\n    renderElement\n  } = useComponentRenderer({\n    propGetter: getScrubAreaCursorProps,\n    ref: mergedRef,\n    render: render ?? 'span',\n    state,\n    className,\n    extraProps: otherProps\n  });\n  if (!isScrubbing || isWebKit()) {\n    return null;\n  }\n  return /*#__PURE__*/ReactDOM.createPortal(renderElement(), ownerDocument(element).body);\n});\nprocess.env.NODE_ENV !== \"production\" ? NumberFieldScrubAreaCursor.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * CSS class applied to the element, or a function that\n   * returns a class based on the component’s state.\n   */\n  className: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  /**\n   * Allows you to replace the component’s HTML element\n   * with a different tag, or compose it with another component.\n   *\n   * Accepts a `ReactElement` or a function that returns the element to render.\n   */\n  render: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n} : void 0;\nexport { NumberFieldScrubAreaCursor };"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,QAAQ,MAAM,WAAW;AACrC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,yBAAyB,QAAQ,mCAAmC;AAC7E,SAASC,QAAQ,QAAQ,8BAA8B;AACvD,SAASC,oBAAoB,QAAQ,qCAAqC;AAC1E,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,aAAa,QAAQ,sBAAsB;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,0BAA0B,GAAG,aAAaR,KAAK,CAACS,UAAU,CAAC,SAASD,0BAA0BA,CAACE,KAAK,EAAEC,YAAY,EAAE;EACxH,MAAM;IACJC,MAAM;IACNC,SAAS;IACT,GAAGC;EACL,CAAC,GAAGJ,KAAK;EACT,MAAM;IACJK,WAAW;IACXC,kBAAkB;IAClBC,KAAK;IACLC;EACF,CAAC,GAAGf,yBAAyB,CAAC,CAAC;EAC/B,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,KAAK,CAACqB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMC,SAAS,GAAGhB,UAAU,CAACK,YAAY,EAAEK,kBAAkB,EAAEI,UAAU,CAAC;EAC1E,MAAM;IACJG;EACF,CAAC,GAAGlB,oBAAoB,CAAC;IACvBmB,UAAU,EAAEN,uBAAuB;IACnCO,GAAG,EAAEH,SAAS;IACdV,MAAM,EAAEA,MAAM,IAAI,MAAM;IACxBK,KAAK;IACLJ,SAAS;IACTa,UAAU,EAAEZ;EACd,CAAC,CAAC;EACF,IAAI,CAACC,WAAW,IAAIX,QAAQ,CAAC,CAAC,EAAE;IAC9B,OAAO,IAAI;EACb;EACA,OAAO,aAAaH,QAAQ,CAAC0B,YAAY,CAACJ,aAAa,CAAC,CAAC,EAAEhB,aAAa,CAACY,OAAO,CAAC,CAACS,IAAI,CAAC;AACzF,CAAC,CAAC;AACFC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGvB,0BAA0B,CAACwB,SAAS,CAAC,yBAAyB;EACpG;EACA;EACA;EACA;EACA;AACF;AACA;EACEC,QAAQ,EAAE/B,SAAS,CAACgC,IAAI;EACxB;AACF;AACA;AACA;EACErB,SAAS,EAAEX,SAAS,CAACiC,SAAS,CAAC,CAACjC,SAAS,CAACkC,IAAI,EAAElC,SAAS,CAACmC,MAAM,CAAC,CAAC;EAClE;AACF;AACA;AACA;AACA;AACA;EACEzB,MAAM,EAAEV,SAAS,CAACiC,SAAS,CAAC,CAACjC,SAAS,CAACiB,OAAO,EAAEjB,SAAS,CAACkC,IAAI,CAAC;AACjE,CAAC,GAAG,KAAK,CAAC;AACV,SAAS5B,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}