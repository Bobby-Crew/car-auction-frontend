{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useNumberFieldRootContext } from '../root/NumberFieldRootContext.js';\nimport { useComponentRenderer } from '../../utils/useComponentRenderer.js';\nimport { useForkRef } from '../../utils/useForkRef.js';\nimport { fieldValidityMapping } from '../../field/utils/constants.js';\n\n/**\n * The native input control in the number field.\n * Renders an `<input>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nconst NumberFieldInput = /*#__PURE__*/React.forwardRef(function NumberFieldInput(props, forwardedRef) {\n  const {\n    render,\n    className,\n    ...otherProps\n  } = props;\n  const {\n    getInputProps,\n    inputRef,\n    state\n  } = useNumberFieldRootContext();\n  const mergedInputRef = useForkRef(forwardedRef, inputRef);\n  const {\n    renderElement\n  } = useComponentRenderer({\n    propGetter: getInputProps,\n    ref: mergedInputRef,\n    render: render ?? 'input',\n    className,\n    state,\n    extraProps: otherProps,\n    customStyleHookMapping: fieldValidityMapping\n  });\n  return renderElement();\n});\nprocess.env.NODE_ENV !== \"production\" ? NumberFieldInput.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * CSS class applied to the element, or a function that\n   * returns a class based on the component’s state.\n   */\n  className: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  /**\n   * Allows you to replace the component’s HTML element\n   * with a different tag, or compose it with another component.\n   *\n   * Accepts a `ReactElement` or a function that returns the element to render.\n   */\n  render: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n} : void 0;\nexport { NumberFieldInput };","map":{"version":3,"names":["React","PropTypes","useNumberFieldRootContext","useComponentRenderer","useForkRef","fieldValidityMapping","NumberFieldInput","forwardRef","props","forwardedRef","render","className","otherProps","getInputProps","inputRef","state","mergedInputRef","renderElement","propGetter","ref","extraProps","customStyleHookMapping","process","env","NODE_ENV","propTypes","children","node","oneOfType","func","string","element"],"sources":["/Users/bobbycrew/Documents/Uni/Second Year/Car-Auction-Site-Y2--main/Frontend/node_modules/@base-ui-components/react/esm/number-field/input/NumberFieldInput.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useNumberFieldRootContext } from '../root/NumberFieldRootContext.js';\nimport { useComponentRenderer } from '../../utils/useComponentRenderer.js';\nimport { useForkRef } from '../../utils/useForkRef.js';\nimport { fieldValidityMapping } from '../../field/utils/constants.js';\n\n/**\n * The native input control in the number field.\n * Renders an `<input>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nconst NumberFieldInput = /*#__PURE__*/React.forwardRef(function NumberFieldInput(props, forwardedRef) {\n  const {\n    render,\n    className,\n    ...otherProps\n  } = props;\n  const {\n    getInputProps,\n    inputRef,\n    state\n  } = useNumberFieldRootContext();\n  const mergedInputRef = useForkRef(forwardedRef, inputRef);\n  const {\n    renderElement\n  } = useComponentRenderer({\n    propGetter: getInputProps,\n    ref: mergedInputRef,\n    render: render ?? 'input',\n    className,\n    state,\n    extraProps: otherProps,\n    customStyleHookMapping: fieldValidityMapping\n  });\n  return renderElement();\n});\nprocess.env.NODE_ENV !== \"production\" ? NumberFieldInput.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * CSS class applied to the element, or a function that\n   * returns a class based on the component’s state.\n   */\n  className: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  /**\n   * Allows you to replace the component’s HTML element\n   * with a different tag, or compose it with another component.\n   *\n   * Accepts a `ReactElement` or a function that returns the element to render.\n   */\n  render: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n} : void 0;\nexport { NumberFieldInput };"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,yBAAyB,QAAQ,mCAAmC;AAC7E,SAASC,oBAAoB,QAAQ,qCAAqC;AAC1E,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,oBAAoB,QAAQ,gCAAgC;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAG,aAAaN,KAAK,CAACO,UAAU,CAAC,SAASD,gBAAgBA,CAACE,KAAK,EAAEC,YAAY,EAAE;EACpG,MAAM;IACJC,MAAM;IACNC,SAAS;IACT,GAAGC;EACL,CAAC,GAAGJ,KAAK;EACT,MAAM;IACJK,aAAa;IACbC,QAAQ;IACRC;EACF,CAAC,GAAGb,yBAAyB,CAAC,CAAC;EAC/B,MAAMc,cAAc,GAAGZ,UAAU,CAACK,YAAY,EAAEK,QAAQ,CAAC;EACzD,MAAM;IACJG;EACF,CAAC,GAAGd,oBAAoB,CAAC;IACvBe,UAAU,EAAEL,aAAa;IACzBM,GAAG,EAAEH,cAAc;IACnBN,MAAM,EAAEA,MAAM,IAAI,OAAO;IACzBC,SAAS;IACTI,KAAK;IACLK,UAAU,EAAER,UAAU;IACtBS,sBAAsB,EAAEhB;EAC1B,CAAC,CAAC;EACF,OAAOY,aAAa,CAAC,CAAC;AACxB,CAAC,CAAC;AACFK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGlB,gBAAgB,CAACmB,SAAS,CAAC,yBAAyB;EAC1F;EACA;EACA;EACA;EACA;AACF;AACA;EACEC,QAAQ,EAAEzB,SAAS,CAAC0B,IAAI;EACxB;AACF;AACA;AACA;EACEhB,SAAS,EAAEV,SAAS,CAAC2B,SAAS,CAAC,CAAC3B,SAAS,CAAC4B,IAAI,EAAE5B,SAAS,CAAC6B,MAAM,CAAC,CAAC;EAClE;AACF;AACA;AACA;AACA;AACA;EACEpB,MAAM,EAAET,SAAS,CAAC2B,SAAS,CAAC,CAAC3B,SAAS,CAAC8B,OAAO,EAAE9B,SAAS,CAAC4B,IAAI,CAAC;AACjE,CAAC,GAAG,KAAK,CAAC;AACV,SAASvB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}