{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { useEventCallback } from '../../utils/useEventCallback.js';\nimport { useFieldRootContext } from '../root/FieldRootContext.js';\nimport { mergeReactProps } from '../../utils/mergeReactProps.js';\nimport { DEFAULT_VALIDITY_STATE } from '../utils/constants.js';\nimport { useFormContext } from '../../form/FormContext.js';\nimport { getCombinedFieldValidityData } from '../utils/getCombinedFieldValidityData.js';\nconst validityKeys = Object.keys(DEFAULT_VALIDITY_STATE);\nexport function useFieldControlValidation() {\n  const {\n    setValidityData,\n    validate,\n    messageIds,\n    validityData,\n    validationMode,\n    validationDebounceTime,\n    invalid,\n    markedDirtyRef,\n    controlId,\n    state\n  } = useFieldRootContext();\n  const {\n    formRef\n  } = useFormContext();\n  const timeoutRef = React.useRef(-1);\n  const inputRef = React.useRef(null);\n  React.useEffect(() => {\n    return () => {\n      window.clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  const commitValidation = useEventCallback(async value => {\n    const element = inputRef.current;\n    if (!element) {\n      return;\n    }\n    function getState(el) {\n      return validityKeys.reduce((acc, key) => {\n        acc[key] = el.validity[key];\n        if (!el.validity.customError && !markedDirtyRef.current) {\n          acc[key] = key === 'valid';\n        }\n        return acc;\n      }, {});\n    }\n    window.clearTimeout(timeoutRef.current);\n    const resultOrPromise = validate(value);\n    let result = null;\n    if (typeof resultOrPromise === 'object' && resultOrPromise !== null && 'then' in resultOrPromise) {\n      result = await resultOrPromise;\n    } else {\n      result = resultOrPromise;\n    }\n    let errorMessage = '';\n    if (result !== null) {\n      errorMessage = Array.isArray(result) ? result.join('\\n') : result;\n    }\n    element.setCustomValidity(errorMessage);\n    const nextState = getState(element);\n    let validationErrors = [];\n    if (Array.isArray(result)) {\n      validationErrors = result;\n    } else if (result) {\n      validationErrors = [result];\n    } else if (element.validationMessage) {\n      validationErrors = [element.validationMessage];\n    }\n    const nextValidityData = {\n      value,\n      state: nextState,\n      error: Array.isArray(result) ? result[0] : result ?? element.validationMessage,\n      errors: validationErrors,\n      initialValue: validityData.initialValue\n    };\n    if (controlId) {\n      const currentFieldData = formRef.current.fields.get(controlId);\n      if (currentFieldData) {\n        formRef.current.fields.set(controlId, {\n          ...currentFieldData,\n          ...getCombinedFieldValidityData(nextValidityData, invalid)\n        });\n      }\n    }\n    setValidityData(nextValidityData);\n  });\n  const getValidationProps = React.useCallback((externalProps = {}) => mergeReactProps(externalProps, {\n    ...(messageIds.length && {\n      'aria-describedby': messageIds.join(' ')\n    }),\n    ...(state.valid === false && {\n      'aria-invalid': true\n    })\n  }), [messageIds, state.valid]);\n  const getInputValidationProps = React.useCallback((externalProps = {}) => mergeReactProps(getValidationProps(externalProps), {\n    onChange(event) {\n      // Workaround for https://github.com/facebook/react/issues/9023\n      if (event.nativeEvent.defaultPrevented) {\n        return;\n      }\n      if (invalid || validationMode !== 'onChange') {\n        return;\n      }\n      const element = event.currentTarget;\n      if (element.value === '') {\n        // Ignore the debounce time for empty values.\n        commitValidation(element.value);\n        return;\n      }\n      window.clearTimeout(timeoutRef.current);\n      if (validationDebounceTime) {\n        timeoutRef.current = window.setTimeout(() => {\n          commitValidation(element.value);\n        }, validationDebounceTime);\n      } else {\n        commitValidation(element.value);\n      }\n    }\n  }), [getValidationProps, invalid, validationMode, validationDebounceTime, commitValidation]);\n  return React.useMemo(() => ({\n    getValidationProps,\n    getInputValidationProps,\n    inputRef,\n    commitValidation\n  }), [getValidationProps, getInputValidationProps, commitValidation]);\n}","map":{"version":3,"names":["React","useEventCallback","useFieldRootContext","mergeReactProps","DEFAULT_VALIDITY_STATE","useFormContext","getCombinedFieldValidityData","validityKeys","Object","keys","useFieldControlValidation","setValidityData","validate","messageIds","validityData","validationMode","validationDebounceTime","invalid","markedDirtyRef","controlId","state","formRef","timeoutRef","useRef","inputRef","useEffect","window","clearTimeout","current","commitValidation","value","element","getState","el","reduce","acc","key","validity","customError","resultOrPromise","result","errorMessage","Array","isArray","join","setCustomValidity","nextState","validationErrors","validationMessage","nextValidityData","error","errors","initialValue","currentFieldData","fields","get","set","getValidationProps","useCallback","externalProps","length","valid","getInputValidationProps","onChange","event","nativeEvent","defaultPrevented","currentTarget","setTimeout","useMemo"],"sources":["/Users/bobbycrew/Documents/Uni/Second Year/Car-Auction-Site-Y2--main/Frontend/node_modules/@base-ui-components/react/esm/field/control/useFieldControlValidation.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useEventCallback } from '../../utils/useEventCallback.js';\nimport { useFieldRootContext } from '../root/FieldRootContext.js';\nimport { mergeReactProps } from '../../utils/mergeReactProps.js';\nimport { DEFAULT_VALIDITY_STATE } from '../utils/constants.js';\nimport { useFormContext } from '../../form/FormContext.js';\nimport { getCombinedFieldValidityData } from '../utils/getCombinedFieldValidityData.js';\nconst validityKeys = Object.keys(DEFAULT_VALIDITY_STATE);\nexport function useFieldControlValidation() {\n  const {\n    setValidityData,\n    validate,\n    messageIds,\n    validityData,\n    validationMode,\n    validationDebounceTime,\n    invalid,\n    markedDirtyRef,\n    controlId,\n    state\n  } = useFieldRootContext();\n  const {\n    formRef\n  } = useFormContext();\n  const timeoutRef = React.useRef(-1);\n  const inputRef = React.useRef(null);\n  React.useEffect(() => {\n    return () => {\n      window.clearTimeout(timeoutRef.current);\n    };\n  }, []);\n  const commitValidation = useEventCallback(async value => {\n    const element = inputRef.current;\n    if (!element) {\n      return;\n    }\n    function getState(el) {\n      return validityKeys.reduce((acc, key) => {\n        acc[key] = el.validity[key];\n        if (!el.validity.customError && !markedDirtyRef.current) {\n          acc[key] = key === 'valid';\n        }\n        return acc;\n      }, {});\n    }\n    window.clearTimeout(timeoutRef.current);\n    const resultOrPromise = validate(value);\n    let result = null;\n    if (typeof resultOrPromise === 'object' && resultOrPromise !== null && 'then' in resultOrPromise) {\n      result = await resultOrPromise;\n    } else {\n      result = resultOrPromise;\n    }\n    let errorMessage = '';\n    if (result !== null) {\n      errorMessage = Array.isArray(result) ? result.join('\\n') : result;\n    }\n    element.setCustomValidity(errorMessage);\n    const nextState = getState(element);\n    let validationErrors = [];\n    if (Array.isArray(result)) {\n      validationErrors = result;\n    } else if (result) {\n      validationErrors = [result];\n    } else if (element.validationMessage) {\n      validationErrors = [element.validationMessage];\n    }\n    const nextValidityData = {\n      value,\n      state: nextState,\n      error: Array.isArray(result) ? result[0] : result ?? element.validationMessage,\n      errors: validationErrors,\n      initialValue: validityData.initialValue\n    };\n    if (controlId) {\n      const currentFieldData = formRef.current.fields.get(controlId);\n      if (currentFieldData) {\n        formRef.current.fields.set(controlId, {\n          ...currentFieldData,\n          ...getCombinedFieldValidityData(nextValidityData, invalid)\n        });\n      }\n    }\n    setValidityData(nextValidityData);\n  });\n  const getValidationProps = React.useCallback((externalProps = {}) => mergeReactProps(externalProps, {\n    ...(messageIds.length && {\n      'aria-describedby': messageIds.join(' ')\n    }),\n    ...(state.valid === false && {\n      'aria-invalid': true\n    })\n  }), [messageIds, state.valid]);\n  const getInputValidationProps = React.useCallback((externalProps = {}) => mergeReactProps(getValidationProps(externalProps), {\n    onChange(event) {\n      // Workaround for https://github.com/facebook/react/issues/9023\n      if (event.nativeEvent.defaultPrevented) {\n        return;\n      }\n      if (invalid || validationMode !== 'onChange') {\n        return;\n      }\n      const element = event.currentTarget;\n      if (element.value === '') {\n        // Ignore the debounce time for empty values.\n        commitValidation(element.value);\n        return;\n      }\n      window.clearTimeout(timeoutRef.current);\n      if (validationDebounceTime) {\n        timeoutRef.current = window.setTimeout(() => {\n          commitValidation(element.value);\n        }, validationDebounceTime);\n      } else {\n        commitValidation(element.value);\n      }\n    }\n  }), [getValidationProps, invalid, validationMode, validationDebounceTime, commitValidation]);\n  return React.useMemo(() => ({\n    getValidationProps,\n    getInputValidationProps,\n    inputRef,\n    commitValidation\n  }), [getValidationProps, getInputValidationProps, commitValidation]);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}